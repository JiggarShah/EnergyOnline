pragma solidity ^0.4.19;

/* The main contract for the EnergyToken trading containing the balances */
contract EnergyWallet {

    mapping(address => uint256) balance;
    address owner;
    bool initialized;
    
    /* Constructor that initializes the owner */
    function EnergyToken() public {
        owner = msg.sender;
    }
    
    /* Function that can be called once by the owner
     * It initalizes one wallet with tokens */
    function initialize(address wallet) public {
        require(msg.sender == owner);
        require(initialized == false);
        initialized = true;
        balance[wallet] = 1e40;
    }
    
    /* Function that takes tokens from one wallet and puts it to another one. 
     * Only callable by the owner of the wallet that looses tokens */
    function pay(address wallet, uint256 amount) public {
        require(balance[msg.sender] >= amount);
        balance[msg.sender] -= amount;
        balance[wallet] += amount;
    }
    
    /* Function to read the balance of a wallet */
    function ask_balance(address wallet) public view returns (uint256) {
        return balance[wallet];
    }
}
